# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html
# *** DO NOT EDIT THIS FILE. It's a template which will be copied to the
# *** default location during install, and will be replaced if you
# *** upgrade to a newer version of MySQL.
[client]
default-character-set=utf8


[mysql]
#character_set_client=utf8
default-character-set=utf8

[mysqld]
# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M

# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin

# These are commonly set, remove the # and set as required.
# basedir = .....
# datadir = .....
# port = .....
# server_id = .....

basedir=F:\Program Files\mysql-5.7.17-winx64
datadir=F:\Program Files\mysql-5.7.17-winx64\data
port=3306
#character-set-client=utf8
#default-charset=utf8
character-set-server=utf8
#character-set-database=utf8
collation-server=utf8_general_ci
#default-stortage-engine=INNODB

# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M #联合查询操作所能使用的缓冲区大小，和sort_buffer_size一样，该参数对应的分配内存也是每连接独享。
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M #读查询操作所能使用的缓冲区大小。和sort_buffer_size一样，该参数对应的分配内存也是每连接独享。

#INNODB
#每张表数据单独放在 .ibd文件里; after version 5.6; default = on #独立表空间
#innodb_file_per_table = on
# hardisk RAID ? value = O_DIRECT : default = fdatasync
#innodb_flush_method = fdatasync
# too many binary in transactions ? more than 1M : 1M(default)
# innodb_log_buffer_size = 1M
#(5.6 default 0) replace by memcache or redis
# 指定MySQL查询缓冲区的大小。
#可以通过在MySQL控制台观察，如果Qcache_lowmem_prunes的值非常大，则表明经常出现缓冲不够的情况；
#如果Qcache_hits的值非常大，则表明查询缓冲使用非常频繁，如果该值较小反而会影响效率，那么可以考虑不用查询缓冲；
#Qcache_free_blocks，如果该值非常大，则表明缓冲区中碎片很多。
#query_cache_size = 0
#
#wait_timeout = 10
#指定一个请求的最大连接时间，对于4GB左右内存的服务器可以设置为5-10。

#log_bin
##禁止MySQL对外部连接进行DNS解析，使用这一选项可以消除MySQL进行DNS解析的时间。但需要注意，如果开启该选项，则所有远程主机连接授权都要使用IP地址方式，否则MySQL将无法正常处理连接请求！
#skip_name_resolve = off
#推荐配置量为总内存的75%
#innodb_buffer_pool_size = 200M
#innodb_log_file_size = 512M
#max_connections = 200
##避免MySQL的外部锁定，减少出错几率增强稳定性
#skip-locking

#默认为1，可取0，1，2 一般建议2# IO影响很大
#innodb_flush_log_at_trx_commit = 1
#innodb表空间, 默认off
#innodb_file_per_table = off


#back_log = 384
#back_log 参数的值指出在MySQL暂时停止响应新请求之前的短时间内多少个请求可以被存在堆栈中。  
#如果系统在一个短时间内有很多连接，则需要增大该参数的值，该参数值指定到来的TCP/IP连接的侦听队列的大小。
#不同的操作系统在这个队列大小上有它自己的限制。 试图设定back_log高于你的操作系统的限制将是无效的。
#默认值为50。对于Linux系统推荐设置为小于512的整数。

#key_buffer_size = 256M
#key_buffer_size指定用于索引的缓冲区大小，增加它可得到更好的索引处理性能。
#对于内存在4GB左右的服务器该参数可设置为256M或384M。注意：该参数值设置的过大反而会是服务器整体效率降低！

#sort_buffer_size = 6M
#查询排序时所能使用的缓冲区大小。注意：该参数对应的分配内存是每连接独占，如果有100个连接，
#那么实际分配的总共排序缓冲区大小为100 × 6 ＝ 600MB。所以，对于内存在4GB左右的服务器推荐设置为6-8M。

#table_cache=1024
#物理内存越大,设置就越大.默认为2402,调到512-1024最佳


sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 
